package backchat.borg;

option optimize_for = SPEED;
option java_package = "backchat.borg";
option java_outer_classname = "Protos";

message BorgPayload {
  required string action = 1;
  optional bytes data = 2;
  optional bytes meta = 3;
}

message BorgMessage {

  enum MessageType {
    SYSTEM = 0;
    FIRE_FORGET = 1;
    REQUEST_REPLY = 2;
    PUBSUB = 3;
  }

  required string ccid = 1;
  required MessageType message_type = 2;
  required string target = 3;
  optional BorgPayload payload = 4;

  optional string sender = 5;

}

message Node {

  required string id = 1;
  required string url = 2;
  repeated string capabilities = 3;
  repeated string services = 4;
}

message TrackerNode {
  required string id = 1;
  required string source = 2;
  repeated string kind = 3;
  required uint64 node_id = 4;
  repeated string services = 5;
  required ServiceType provides = 6 [ default = TRACKER ];
}

enum ServiceType {
  DOMAIN = 0;
  STREAMS = 1;
  INDEXER = 2;
  TRACKER = 3;
  PUBLISHER = 4;
}

message Service {
  enum DeploymentType {
    JAR = 0;
    RUBY_SCRIPT = 1;
    PYTHON_SCRIPT = 2;
    NODEJS_SCRIPT = 3;
    GEM = 4;
    EGG = 5;
    NPM = 6;
    DEB = 7;
  }

  required string name = 1;
  optional bytes data = 3;
  required DeploymentType deploy_as = 4 [ default = JAR ];
  required ServiceType provides = 5 [ default = DOMAIN];
}


